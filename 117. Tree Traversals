void traverse(BinaryTreeNode<int> *root, vector <int>& preorder,
 vector <int>& inorder, vector <int>& postorder){
     if(root==NULL)
     return ;
     preorder.push_back(root->data);
     traverse(root->left, preorder, inorder, postorder);
     inorder.push_back(root->data);
     traverse(root->right, preorder, inorder, postorder);
     postorder.push_back(root->data);
 }
vector<vector<int>> getTreeTraversal(BinaryTreeNode<int> *root){
    vector <vector<int>> ans;
    if(root==NULL)
    return ans;
    vector <int> preorder, inorder, postorder;
    traverse(root, preorder, inorder, postorder);
    ans.push_back(inorder);
    ans.push_back(preorder);
    ans.push_back(postorder);
    return ans;
}
// tc: o(n), sc: o(n)
