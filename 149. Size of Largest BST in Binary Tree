class node{
    public:
    int maxi;
    int mini;
    int maxisize;

    public:

    node(int a, int b, int c){
        maxi= a;
        mini= b;
        maxisize= c;
    }

};
node* solve(TreeNode<int>* root){
    
    if(root==NULL)
    return new node(INT_MIN, INT_MAX, 0);;

    auto leftAns= solve(root->left);
    auto rightAns= solve(root->right);
    
    if(leftAns->maxi <= root->data && rightAns->mini >= root->data){
        return new node(max(rightAns->maxi, root->data), min(leftAns->mini, root->data),
         leftAns->maxisize + rightAns->maxisize + 1);
    }
    return new node(INT_MAX, INT_MIN, max(leftAns->maxisize ,rightAns->maxisize));
}
int largestBST(TreeNode<int>* root) 
{
    return solve(root)->maxisize;
}
// tc: o(n), sc: o(n)
