double median(vector<int>& a, vector<int>& b) {
	int n= a.size(), m= b.size(), k;
    if(n > m) median(b, a);
     if((n+m)%2 ==0)
     k= (n+m)/2 ;
     else
     k= (n+m)/2 +1;
    int low= 0, high= n;
    while(low<=high){
        int cut1= low + (high - low)/2;
        int cut2= k - cut1;
        int l1, l2, r1, r2;
        l1= (cut1==0)? INT_MIN : a[cut1-1];
        l2= (cut2==0)? INT_MIN : b[cut2-1];
        r1= (cut1==n)? INT_MAX : a[cut1];
        r2= (cut2==m)? INT_MAX : b[cut2];

        if(l1<=r2 && l2<=r1){
            if((n+m)%2==0){
                double ans= (double)(max(l1, l2) + min(r1, r2))/2;
                return ans;
            }
            else
            return max(l1, l2);
        }
        else if(l1>r2)
        high= cut1 -1;
        else 
        low= cut1 +1 ;
    }
    return -1;
}
// tc: o(min(logn, logm)) sc: o(1)
