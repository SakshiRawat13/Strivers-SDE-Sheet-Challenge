vector<int> zigZagTraversal(BinaryTreeNode<int> *root)
{
    vector <int> ans;
    if(root==NULL) return ans;
    queue <BinaryTreeNode<int>*> q;
    bool flag= false;
    q.push(root);
    while(!q.empty()){
        int n= q.size();
        vector <int> curr;
        for(int i=0; i<n; i++){
            BinaryTreeNode<int> * temp = q.front();
            q.pop();
            curr.push_back(temp->data);
            if(temp->left){
                q.push(temp->left);
            }
            if(temp->right){
                q.push(temp->right);
            }
            
        }
        flag= !flag;
        if(!flag)
        reverse(curr.begin(), curr.end());
        for(auto x: curr)
        ans.push_back(x);
    }
    return ans;
}
// tc: o(n), sc: o(n)
