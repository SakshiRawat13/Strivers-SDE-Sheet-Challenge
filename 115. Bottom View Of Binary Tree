vector<int> bottomView(BinaryTreeNode<int> * root){

    // do level order traversal
    // last level element of a partcular hd is bottom view
    vector <int> ans;
    if(root==NULL) 
    return ans;
    map <int, int> mp;
    queue <pair<BinaryTreeNode<int> *, int>> q;
    q.push({root, 0});
    while(!q.empty()){
            auto temp= q.front();
            q.pop();
            BinaryTreeNode<int> *node= temp.first;
            int currhd= temp.second;
            mp[currhd]= node->data;
            if(node->left)
            q.push({node->left, currhd-1});
            if(node->right)
            q.push({node->right, currhd + 1});
        
    }
    for(auto it: mp){
        
        ans.push_back(it.second);
    }
    return ans;
}
// tc: o(n*logn), sc: o(n)
