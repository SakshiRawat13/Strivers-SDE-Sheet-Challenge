#include <bits/stdc++.h>
int dx[]= {-1, 0, 1, 0}; 
int dy[]= {0, 1, 0, -1};
vector<vector<int>> floodFill(vector<vector<int>> &image, int x, int y, int newColor)
{   int oldColor = image[x][y];
    int n= image.size(), m= image[0].size();
    image[x][y]= newColor;
    vector <vector<bool>> vis(n, vector <bool> (m, false));
    vis[x][y]= true;
    queue <pair<int, int>> q;
    q.push({x, y});
    while(!q.empty()){
        auto temp = q.front();
        q.pop();
        int r= temp.first;
        int c= temp.second;
        for(int i=0; i<4; i++){
            int nr= r + dx[i];
            int nc= c + dy[i];
            if(nr>=0 && nr<n && nc>=0 && nc<m 
            && image[nr][nc]==oldColor && !vis[nr][nc]){
                vis[nr][nc]=1;
                image[nr][nc]= newColor;
                q.push({nr, nc});
            }
        }
    }
    return image;
}
// tc: o(n*m), sc: O(n*m)
